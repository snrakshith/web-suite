import createClient from "openapi-fetch";
import type { paths, operations } from "./api/v1"; // generated by openapi-typescript

// Define base URL for the API
const baseUrl = "https://myapi.dev/v1/";

// Create the client with base URL
const client = createClient<paths>({ baseUrl });

// Define a function to dynamically generate client functions
function generateClientFunctions(paths: paths) {
  for (const path in paths) {
    const methods = paths[path];
    for (const method in methods) {
      const methodName = `${method.toLowerCase()}_${path.replace(/\//g, "_")}`;
      const operation: operations = methods[method];

      // Create client function for each path and method
      client[methodName] = async (params: Record<string, any>) => {
        // Extract parameters from params object
        const { query, body, headers } = params;

        // Formulate options for fetch
        const options: Record<string, any> = {};

        // Set query parameters
        if (query) {
          options.params = query;
        }

        // Set request body
        if (body) {
          options.data = body;
        }

        // Set headers
        if (headers) {
          options.header = headers;
        }

        try {
          const { response, data, error } = await client[method](path, options);
          return { response, data, error };
        } catch (error) {
          // Handle errors here
          console.error("An error occurred:", error);
          return { response: null, data: null, error };
        }
      };
    }
  }
}

// Call the function to generate client functions
generateClientFunctions(client["paths"]);

// Example usage
(async () => {
  try {
    const { response, data, error } = await client.GET("/crm/users", {
      params: {
        header: {
          "x-apideck-app-id": "",
          "x-apideck-consumer-id": "",
        },
      },
    });

    if (response) {
      console.log("Response:", response);
    }

    if (data) {
      console.log("Data:", data);
    }

    if (error) {
      console.error("Error:", error);
    }
  } catch (err) {
    console.error("An error occurred:", err);
  }
})();
